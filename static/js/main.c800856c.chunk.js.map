{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","world_map","useRef","console","log","window","useState","setCountries","data","setData","selectedOption","setSelectedOption","data_gross","setData_gross","dimensions","marginTop","marginBottom","marginLeft","marginRight","width","height","mapWidth","mapHeight","ctrWidth","ctrHeight","BOXSIZE","svg","d3","select","attr","tooltip","genBarChart","specificData","selectAll","remove","copiedData","yData","Object","values","xScale","scaleBand","domain","range","xScaleIndex","yScale","scaleLinear","max","invertyScale","xAxis","axisBottom","yAxis","axisLeft","xAxisGroup","append","call","style","yAxisGroup","text","join","enter","d","i","update","exit","transition","useEffect","a","csv","info","entries","map","startsWith","replace","trim","replaceAll","temp","parseFloat","isNaN","fromEntries","parsedData","ele","includes","json","data_geo","projection","geoMercator","scale","center","translate","features","path","geoPath","color","quantize","t","interpolateOranges","length","colorScale","scaleQuantize","extent","places","name","Delegation","lat","lng","svg_geo","find","datum","toLowerCase","properties","coor","runningFunction","on","e","preventDefault","value","target","__data__","stopPropagation","x","y","this","duration","Math","round","genBarChart_Gross","onChange","selected","id","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c800856c.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n// import * as d3 from 'd3';\n// import * as geo from 'd3-geo'\n\nimport \"./App.css\"\n\nfunction App() {\n\n  const world_map = useRef()\n\n\n  console.log(window.window)\n\n  const [countries, setCountries] = useState(null)\n  const [data, setData] = useState(null)\n  const [selectedOption, setSelectedOption] = useState('population')\n  const [data_gross, setData_gross] = useState(null)\n\n  const dimensions = {\n    marginTop: 30, marginBottom: 30, marginLeft: 30, marginRight: 30,\n    width: 500, height: 500, mapWidth: 600, mapHeight: 600\n  }\n\n  dimensions.ctrWidth = dimensions.width - dimensions.marginLeft - dimensions.marginRight\n  dimensions.ctrHeight = dimensions.height - dimensions.marginTop - dimensions.marginBottom\n\n\n  const BOXSIZE = 30\n\n  const svg = window.window.d3.select(\"#svg1\")\n    .attr(\"height\", dimensions.height)\n    .attr(\"width\", 800)\n    .attr('transform', `translate(${dimensions.marginLeft},${dimensions.marginTop})`)\n\n\n  const tooltip = window.window.d3.select('#tooltip');\n\n\n\n  const genBarChart = (specificData) => {\n    svg.selectAll('*').remove();\n    let copiedData = { ...specificData }\n\n    delete copiedData[\"% Women\"]\n    delete copiedData[\"Delegation\"]\n    delete copiedData[\"Men\"]\n    delete copiedData[\"Women\"]\n    delete copiedData[\"Total\"]\n    delete copiedData[\"lat\"]\n    delete copiedData[\"lng\"]\n\n    const yData = Object.values(copiedData)\n    console.log(yData)\n\n    const xScale = window.window.d3.scaleBand().domain([\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"]).range([0, dimensions.ctrWidth])\n    const xScaleIndex = window.window.d3.scaleBand().domain([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]).range([0, dimensions.ctrWidth])\n    const yScale = window.window.d3.scaleLinear().domain([0, window.window.d3.max(yData)]).range([dimensions.ctrHeight, 0])\n    const invertyScale = window.window.d3.scaleLinear().domain([0, window.window.d3.max(yData)]).range([0, dimensions.ctrHeight])\n\n\n    const xAxis = window.window.d3.axisBottom(xScale)\n    const yAxis = window.window.d3.axisLeft(yScale)\n    const xAxisGroup = svg.append(\"g\").call(xAxis).style(\"transform\", `translate(${110}px,${dimensions.ctrHeight}px)`)\n    const yAxisGroup = svg.append(\"g\").call(yAxis).style(\"transform\", `translate(${110}px, ${0}px)`)\n\n    xAxisGroup.append(\"text\").attr(\"x\", dimensions.ctrWidth / 2).attr(\"y\", dimensions.marginBottom)\n      .attr(\"fill\", 'black')\n      .text(\"Years\").style(\"font-weight\", \"bold\")\n    yAxisGroup.append(\"text\").attr(\"x\", -40).attr(\"y\", dimensions.ctrHeight / 2).attr(\"fill\", \"black\")\n      .text(\"Pop.(10k)\").style(\"font-weight\", \"bold\")\n\n    svg.append(\"g\").style(\"transform\", `translate(${110}px,${0}px)`).selectAll(\"rect\").data(yData).join(\n      (enter) => enter.append('rect')\n        .attr('width', d => BOXSIZE)\n        .attr('height', 0)\n        .attr('x', (d, i) => xScaleIndex(i))\n        .attr('y', dimensions.ctrHeight)\n        .attr('fill', '#37A4DE'),\n      (update) => update,\n      (exit) => exit.attr('fill', '#f39233')\n        .transition()\n        .attr('y', dimensions.ctrHeight)\n        .attr('height', 0)\n        .remove()\n    ).transition()\n      .attr(\"height\", d => invertyScale(d)).attr(\"width\", BOXSIZE)\n      .attr(\"x\", (d, i) => dimensions.ctrWidth * i / 10 + (dimensions.ctrWidth / 10 - BOXSIZE) / 2)\n      .attr(\"y\", d => dimensions.ctrHeight - invertyScale(d))\n  }\n\n\n  const genBarChart_Gross = (specificData) => {\n    svg.selectAll('*').remove();\n    let copiedData = {...specificData}\n\n    delete copiedData[\"Region\"]\n\n    let yData = Object.values(copiedData)\n\n    const xScale = window.window.d3.scaleBand().domain([\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"]).range([0, dimensions.ctrWidth])\n    const xScaleIndex = window.window.d3.scaleBand().domain([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]).range([0, dimensions.ctrWidth])\n    const yScale = window.window.d3.scaleLinear().domain([0, window.window.d3.max(yData)]).range([dimensions.ctrHeight, 0])\n    const invertyScale = window.window.d3.scaleLinear().domain([0, window.window.d3.max(yData)]).range([0, dimensions.ctrHeight])\n\n\n    const xAxis = window.window.d3.axisBottom(xScale)\n    const yAxis = window.window.d3.axisLeft(yScale)\n    const xAxisGroup = svg.append(\"g\").call(xAxis).style(\"transform\", `translate(${110}px,${dimensions.ctrHeight}px)`)\n    const yAxisGroup = svg.append(\"g\").call(yAxis).style(\"transform\", `translate(${110}px, ${0}px)`)\n\n    xAxisGroup.append(\"text\").attr(\"x\", dimensions.ctrWidth / 2).attr(\"y\", dimensions.marginBottom)\n      .attr(\"fill\", 'black')\n      .text(\"Years\").style(\"font-weight\", \"bold\")\n    yAxisGroup.append(\"text\").attr(\"x\", -40).attr(\"y\", dimensions.ctrHeight / 2).attr(\"fill\", \"black\")\n      .text(\"Gross\").style(\"font-weight\", \"bold\")\n\n    svg.append(\"g\").style(\"transform\", `translate(${110}px,${0}px)`).selectAll(\"rect\").data(yData).join(\n      (enter) => enter.append('rect')\n        .attr('width', d => BOXSIZE)\n        .attr('height', 0)\n        .attr('x', (d, i) => xScaleIndex(i))\n        .attr('y', dimensions.ctrHeight)\n        .attr('fill', '#37A4DE'),\n      (update) => update,\n      (exit) => exit.attr('fill', '#f39233')\n        .transition()\n        .attr('y', dimensions.ctrHeight)\n        .attr('height', 0)\n        .remove()\n    ).transition()\n      .attr(\"height\", d => invertyScale(d)).attr(\"width\", BOXSIZE)\n      .attr(\"x\", (d, i) => dimensions.ctrWidth * i / 10 + (dimensions.ctrWidth / 10 - BOXSIZE) / 2)\n      .attr(\"y\", d => dimensions.ctrHeight - invertyScale(d))\n\n  }\n\n  useEffect(() => {\n\n    const runningFunction = async () => {\n\n      const data = await window.window.d3.csv(\"population_info.csv\", (info) => {\n        info = Object.entries(info)\n        info = info.map((data) => {\n          if (data[0].startsWith(\"Population\")) {\n            data[0] = data[0].replace(\"Population\", \"\").trim()\n          }\n          data[1] = data[1].replaceAll(\",\", \"\")\n          let temp = parseFloat(data[1])\n          if (isNaN(temp)) {\n            return [data[0], data[1]]\n          } else {\n            return [data[0], temp]\n          }\n        })\n        return Object.fromEntries(info)\n      })\n\n\n      let data_gross = await window.window.d3.csv(\"gross_china.csv\" , (info) => {\n        let parsedData = Object.entries(info)\n        parsedData = parsedData.map((ele) => {\n          if (ele[1].includes(\",\")) {\n            ele[1] = ele[1].replaceAll(\",\", \"\")\n          }\n          let temp = parseFloat(ele[1])\n          if (isNaN(temp)) {\n            return [ele[0], ele[1]]\n          } else {\n            return [ele[0], temp]\n          }\n        })\n        return Object.fromEntries(parsedData)\n      })\n\n\n      console.log(\"data_gross:\", data_gross)\n\n      setData_gross(data_gross)\n\n      const data_geo = await window.window.d3.json('/chinaGeo.json');\n\n      const projection = window.window.d3.geoMercator()\n        .scale(550)\n        .center([105, 38])\n        .translate([dimensions.mapWidth / 2, dimensions.mapHeight / 2]);\n\n      console.log(data_geo.features)\n\n\n      const path = window.window.d3.geoPath(projection);\n\n      const color = window.window.d3.quantize((t) => window.window.d3.interpolateOranges(t), data_geo[\"features\"].length)\n      const colorScale = window.window.d3.scaleQuantize().domain(window.window.d3.extent(data, d => d[\"2020\"])).range(color)\n\n      let places = data.map((d) => {\n        return { name: d.Delegation, lat: parseFloat(d.lat), log: parseFloat(d.lng) }\n      })\n\n\n      const svg_geo = window.window.d3.select(\"#svg\")\n        .attr(\"width\", dimensions.mapWidth)\n        .attr(\"height\", dimensions.mapHeight)\n\n      svg_geo.selectAll('path')\n        .data(data_geo.features)\n        .enter()\n        .append('path')\n        .attr('d', path)\n        .attr('fill', function (d, i) {\n          return colorScale(data.find((datum) => datum.Delegation.toLowerCase() === d.properties.name.toLowerCase())[\"2020\"]);\n        })\n        .attr('stroke', 'rgba(0, 0, 0, 1')\n        .attr('stroke-width', 1);\n\n      const location = svg_geo.selectAll('.location')\n        .data(places)\n        .enter()\n        .append('g')\n        .attr('class', 'location')\n        .attr('transform', (d) => {\n          const coor = projection([d.log, d.lat]);\n          return 'translate(' + coor[0] + ',' + coor[1] + ')';\n        });\n\n\n      location.append('circle')\n        .attr('r', 4)\n        .attr('fill', '#e91e63')\n        .attr('class', 'location');\n\n      setData(data)\n      setCountries(data.map((datum) => datum.Delegation))\n\n    }\n    runningFunction()\n  }, [])\n\n\n  window.window.d3.select(\"#metric\").on('change', function (e) {\n    e.preventDefault()\n    let specificData = data.find(datum => datum.Delegation === this.value)\n    genBarChart(specificData)\n  })\n\n\n  window.window.d3.select(\"#svg\").selectAll('.location').on('touchmouse mousemove', function (d) {\n    let specificData = data.find(datum => datum.Delegation === d.target.__data__.name)\n    d.stopPropagation();\n    tooltip\n      .style('left', d.x + 20 + 'px')\n      .style('top', d.y + 'px')\n      .style('opacity', 1);\n      window.window.d3.select(this).select('circle').transition()\n      .duration(150)\n      .attr('r', 8);\n    tooltip.select(\"#country\").text(`Country: ${d.target.__data__.name}`).style(\"color\", \"black\")\n    tooltip.select(\"#population\").text(`Population in 2020: ${specificData[\"2020\"]}`).style(\"color\", \"black\")\n    tooltip.select(\"#percentage\").text(`2010-2020 change: ${Math.round((specificData['2020'] - specificData['2011']) * 100 / specificData['2011'], 2)}%`).style(\"color\", \"black\")\n  }).on('mouseout', function (d) {\n    d.stopPropagation();\n    tooltip.style('opacity', 0);\n    window.window.d3.select(this)\n      .select('circle')\n      .transition()\n      .duration(150)\n      .attr('r', 4);\n  }).on(\"click\", (d) => {\n    d.stopPropagation();\n    console.log(\"this is onClick event\", d);\n    if (selectedOption === \"population\") {\n      genBarChart(data.find(datum => datum.Delegation === d.target.__data__.name))\n    } else {\n      genBarChart_Gross(data_gross.find(datum => datum[\"Region\"].toLowerCase() === d.target.__data__.name.toLowerCase() ))\n    }\n    \n  })\n\n\n  const onChangeHandler = (e) => {\n    e.preventDefault();\n    console.log(e.target.value)\n    setSelectedOption(e.target.value)\n  }\n\n  return (\n    <>\n      <p>Here is the title for the graphic</p>\n      <select onChange={onChangeHandler}>\n        <option value=\"population\" selected=\"selected\">population</option>\n        <option value=\"gross\">gross</option>\n      </select>\n      <div id=\"container\">\n        <div id=\"world\">\n          <svg id=\"svg\"></svg>\n          <div id=\"tooltip\">\n            <span id=\"country\"></span>\n            <br />\n            <span id=\"population\"></span>\n            <br />\n            <span id=\"percentage\"></span>\n          </div>\n        </div>\n        {/*<select id=\"metric\">\n      {countries ? countries.map((country) => {\n        return <option value={country}>{country}</option>\n      }) : null}\n    </select>*/}\n        <div id=\"world-map\">\n          <svg ref={world_map} id=\"svg1\">\n          </svg>\n        </div>\n\n\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}